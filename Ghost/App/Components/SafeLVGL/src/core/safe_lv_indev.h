//This file is automatically generated.
//The original file is lv_indev.h
#include "lvgl.h"

//The original function is: lv_indev_read_timer_cb.
void safe_lv_indev_read_timer_cb(lv_timer_t * timer);

//The original function is: lv_indev_enable.
void safe_lv_indev_enable(lv_indev_t * indev, bool en);

//The original function is: lv_indev_get_act.
lv_indev_t * safe_lv_indev_get_act(void);

//The original function is: lv_indev_get_type.
lv_indev_type_t safe_lv_indev_get_type(const lv_indev_t * indev);

//The original function is: lv_indev_reset.
void safe_lv_indev_reset(lv_indev_t * indev, lv_obj_t * obj);

//The original function is: lv_indev_reset_long_press.
void safe_lv_indev_reset_long_press(lv_indev_t * indev);

//The original function is: lv_indev_set_cursor.
void safe_lv_indev_set_cursor(lv_indev_t * indev, lv_obj_t * cur_obj);

//The original function is: lv_indev_set_group.
void safe_lv_indev_set_group(lv_indev_t * indev, lv_group_t * group);

//The original function is: lv_indev_get_point.
void safe_lv_indev_get_point(const lv_indev_t * indev, lv_point_t * point);

//The original function is: lv_indev_get_gesture_dir.
lv_dir_t safe_lv_indev_get_gesture_dir(const lv_indev_t * indev);

//The original function is: lv_indev_get_key.
uint32_t safe_lv_indev_get_key(const lv_indev_t * indev);

//The original function is: lv_indev_get_scroll_dir.
lv_dir_t safe_lv_indev_get_scroll_dir(const lv_indev_t * indev);

//The original function is: lv_indev_get_scroll_obj.
lv_obj_t * safe_lv_indev_get_scroll_obj(const lv_indev_t * indev);

//The original function is: lv_indev_get_vect.
void safe_lv_indev_get_vect(const lv_indev_t * indev, lv_point_t * point);

//The original function is: lv_indev_wait_release.
void safe_lv_indev_wait_release(lv_indev_t * indev);

//The original function is: lv_indev_get_obj_act.
lv_obj_t * safe_lv_indev_get_obj_act(void);

//The original function is: lv_indev_get_read_timer.
lv_timer_t * safe_lv_indev_get_read_timer(lv_disp_t * indev);

//The original function is: lv_indev_search_obj.
lv_obj_t * safe_lv_indev_search_obj(lv_obj_t * obj, lv_point_t * point);

